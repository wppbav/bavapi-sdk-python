[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wpp-bavapi"
version = "0.6.1"
authors = [
    { name = "Ignacio Maiz Vilches", email = "ignacio.maiz@bavgroup.com" },
]
description = "Python consumer for the WPPBAV Fount API."
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "wpp-bavapi",
    "bavapi",
    "bavgroup",
    "bav",
    "brandasset",
    "brandassetvaluator",
    "wppbav",
    "wpp",
    "fount",
]
license = { text = "Apache 2.0" }
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Database :: Database Engines/Servers',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
dependencies = [
    "httpx >= 0.20",
    "pandas >= 0.16.2",
    "pydantic >= 2",
    "tqdm >= 4.62",
    "nest-asyncio >= 1.5.6",
    "typing-extensions >= 3.10; python_version < '3.10'",
]

[project.urls]
homepage = "https://github.com/wppbav/bavapi-sdk-python"

[project.optional-dependencies]
dev = ["black", "nox", "pip-tools"]
doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
]
test = ["coverage", "pytest", "pytest-asyncio", "python-dotenv"]
lint = ["isort", "mypy", "pylint", "pandas-stubs"]

[project.scripts]
bavapi-gen-refs = "bavapi.reference.generate_reference:main"

[tool.setuptools.packages.find]
include = ["bavapi*"]

[tool.coverage.paths]
source = ["bavapi", "/home/runner/work/*/bavapi", "D:/a/*/*/bavapi"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["bavapi", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = ["pragma: no cover", "@overload", "TYPE_CHECKING", "Protocol"]

[tool.mypy]
plugins = "pydantic.mypy"
mypy_path = "type_stubs"

[tool.pytest.ini_options]
markers = [
    "e2e: tests that require an authenticated connection with the Fount.",
]
